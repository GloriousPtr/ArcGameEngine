<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls">

    <FontFamily x:Key="HeaderFontFamily">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
    <System:Double x:Key="WindowTitleFontSize">12</System:Double>
    <System:Double x:Key="TabItemFontSize">14</System:Double>

    <System:Double x:Key="DefaultButtonSize">22</System:Double>

    <Style TargetType="ToggleButton" BasedOn="{StaticResource SquareButtonStyle}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource OptickBorder}" />
        <Setter Property="MinHeight" Value="16" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentBaseColorBrush}" />
                <Setter Property="Background" Value="{StaticResource OptickAlternative}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource SquareButtonStyle}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource OptickBorder}" />
        <Setter Property="MinHeight" Value="16" />
    </Style>
    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{StaticResource OptickBackground}" />
    </Style>
    <Style TargetType="ListBox" BasedOn="{StaticResource MetroListBox}">
        <Setter Property="Background" Value="{StaticResource OptickContentBackground}" />
    </Style>
    <Style TargetType="ListView" BasedOn="{StaticResource MetroListView}">
        <Setter Property="Background" Value="{StaticResource OptickContentBackground}" />
    </Style>
    <Style TargetType="TreeView" BasedOn="{StaticResource MetroTreeView}">
        <Setter Property="Background" Value="{StaticResource OptickContentBackground}" />
    </Style>
    <Style TargetType="DataGrid" BasedOn="{StaticResource MetroDataGrid}">
        <Setter Property="Background" Value="{StaticResource OptickContentBackground}" />
        <Setter Property="RowBackground" Value="{StaticResource OptickBackground}" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource OptickContentBackground}" />
        <Setter Property="MinRowHeight" Value="18" />
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="Background" Value="{StaticResource OptickContentBackground}" />
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource MetroExpander}">
        <Setter Property="Background" Value="{StaticResource OptickContentBackground}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultButtonSize}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style TargetType="GroupBox" BasedOn="{StaticResource MetroGroupBox}">
        <Setter Property="Background" Value="{StaticResource OptickContentBackground}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style TargetType="Label" BasedOn="{StaticResource MetroLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border>
                        <ContentPresenter
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                           RecognizesAccessKey="False" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SplitToggleButtonHorizontal" TargetType="{x:Type Controls:SplitButton}">
        <Grid UseLayoutRounding="True">
            <Border x:Name="PART_Border"
                    Background="Transparent"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <Controls:ClipBorder x:Name="PART_ClipBorder"
                                     CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    <Grid x:Name="PART_Container"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="PART_Button"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Command="{TemplateBinding Command}"
                                CommandParameter="{TemplateBinding CommandParameter}"
                                CommandTarget="{TemplateBinding CommandTarget}"
                                FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                Foreground="{TemplateBinding Foreground}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Style="{TemplateBinding ToggleButtonStyle}">
                            <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Orientation="Horizontal">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding Icon}"
                                                  ContentTemplate="{TemplateBinding IconTemplate}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  UseLayoutRounding="False" />
                                <Controls:ContentControlEx x:Name="PART_ButtonContent"
                                                           Margin="2"
                                                           Padding="{TemplateBinding Padding}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           Content="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                           ContentStringFormat="{TemplateBinding ItemStringFormat}"
                                                           ContentTemplate="{TemplateBinding ItemTemplate}"
                                                           ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                           RecognizesAccessKey="True"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                           UseLayoutRounding="False" />
                            </StackPanel>
                        </ToggleButton>
                        <Button x:Name="PART_Expander"
                                Grid.Column="1"
                                Width="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                Foreground="{TemplateBinding ArrowBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Style="{TemplateBinding ButtonArrowStyle}">
                            <!--  Material - ChevronDown  -->
                            <ContentControl Width="9"
                                            Height="9"
                                            Content="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                                            Style="{DynamicResource PathIconContentControlStyle}" />
                        </Button>
                    </Grid>
                </Controls:ClipBorder>
            </Border>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   PlacementTarget="{Binding ElementName=PART_Border}"
                   PopupAnimation="Fade"
                   StaysOpen="True">
                <ListBox x:Name="PART_ListBox"
                         MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                         Margin="0"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                         IsSelected="{TemplateBinding IsSelected}"
                         IsSynchronizedWithCurrentItem="{TemplateBinding IsSynchronizedWithCurrentItem}"
                         ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                         ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                         ItemStringFormat="{TemplateBinding ItemStringFormat}"
                         ItemTemplate="{TemplateBinding ItemTemplate}"
                         ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                         ItemsPanel="{TemplateBinding ItemsPanel}"
                         ItemsSource="{TemplateBinding ItemsSource}"
                         RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                         SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                         SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                         SelectedValue="{Binding SelectedValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                         SelectedValuePath="{TemplateBinding SelectedValuePath}"
                         SelectionMode="Single"
                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                         Style="{TemplateBinding ListBoxStyle}" />
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Expander" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowMouseOverBrush, Mode=OneWay}" />
            </Trigger>
            <Trigger SourceName="PART_Expander" Property="IsPressed" Value="True">
                <Setter TargetName="PART_Expander" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPressedBrush, Mode=OneWay}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
