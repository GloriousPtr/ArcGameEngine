<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Profiler_Data="clr-namespace:Profiler.Data;assembly=Profiler.Data" xmlns:local="clr-namespace:Profiler"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	xmlns:Custom="http://schemas.microsoft.com/wpf/2008/toolkit"
    xmlns:Controls="clr-namespace:Profiler.Controls"
    xmlns:Profiler_Controls="clr-namespace:Profiler.Controls;assembly=Profiler.Controls"
             x:Class="Profiler.FrameInfo"
	x:Name="UserControl" mc:Ignorable="d"
	TextOptions.TextFormattingMode="Display"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
  d:DataContext="{Binding Source={x:Static Profiler_Data:TestEventFrame.Frame}}" d:DesignWidth="778">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Profiler_Controls:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <Profiler_Controls:CategoryWidthConverter x:Key="CategoryWidthConverter"/>
        <ItemsPanelTemplate x:Key="CategoryListStyle">
            <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal"/>
        </ItemsPanelTemplate>
        <Style x:Key="LabelUnderscoreStyle" BasedOn="{StaticResource {x:Type Label}}" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border>
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="False" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="SkipSelectionButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
        </Style>
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <!--<Style x:Key="CategoryListBoxStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>-->
        <Color x:Key="TableAlternationColor">#FFC8C8C8</Color>
        <Storyboard x:Key="OnMouseEnter1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TreeToolPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseLeave1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TreeToolPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="TreeToolPanel">
            <BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard1" Storyboard="{StaticResource OnMouseEnter1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="TreeToolPanel">
            <BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid x:Name="LayoutRoot" Background="{StaticResource ControlBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Path=DeatiledDescription}" Grid.Column="0" FontWeight="Bold" VerticalAlignment="Center" Margin="2" />
            <StackPanel x:Name="TreeToolPanel" VerticalAlignment="Center" Orientation="Horizontal" HorizontalAlignment="Right" Opacity="0.5" Grid.Column="1">
                <ToggleButton x:Name="FilterByTime" VerticalAlignment="Top" IsChecked="True" Width="{StaticResource DefaultButtonSize}" Height="{StaticResource DefaultButtonSize}" ToolTip="Hides all nodes with small time" FontWeight="Bold" Click="RefreshFilter" Margin="1,1,0,1">
                    <ContentControl Style="{StaticResource appbar_timer}" Margin="-13"/>
                </ToggleButton>
                <TextBox x:Name="TimeLimit" Width="45" Height="{StaticResource DefaultButtonSize}" Padding="0" Text="0.001" FontWeight="Bold" Margin="1,1,0,0" VerticalAlignment="Top" HorizontalAlignment="Center" />
                <ToggleButton x:Name="FocusCallStack" VerticalAlignment="Top" Height="{StaticResource DefaultButtonSize}" ToolTip="Focus on callstacks" FontWeight="Bold" Width="{StaticResource DefaultButtonSize}" Click="RefreshFilter" Margin="1,1,0,1">
                    <ContentControl Style="{StaticResource appbar_crosshair}" Margin="-13"/>
                </ToggleButton>
                <ToggleButton x:Name="ShowPercentButton" Content="%" VerticalAlignment="Top" Width="{StaticResource DefaultButtonSize}" Height="{StaticResource DefaultButtonSize}" FontSize="18.667" Padding="1,-4,1,-1" ToolTip="Show events in percent" FontWeight="Bold"  Margin="1,1,0,1" />
            </StackPanel>
        </Grid>
        <TreeView Grid.Column="0" Grid.Row="1" BorderThickness="0" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" x:Name="EventTreeView" DataContext="{Binding Root}" ItemsSource="{Binding Children}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0" >
            <TreeView.CommandBindings>
                <CommandBinding Command="ApplicationCommands.Copy" Executed="TreeViewCopy_Executed" />
            </TreeView.CommandBindings>
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type Profiler_Data:BaseTreeNode}" ItemsSource="{Binding Children}">
                    <Grid Width="Auto" Margin="1">
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Show Source Code" Click="MenuShowSourceCode">
                                    <MenuItem.Icon>
                                        <ContentControl Style="{StaticResource appbar_page_code}" Margin="-10" Width="26" Height="26"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="Sample Function (All Frames)" Click="MenuSampleFunctions">
                                    <MenuItem.Icon>
                                        <ContentControl Style="{StaticResource appbar_camera_flash}" Margin="-10" Width="26" Height="26" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="88"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="TotalText" Grid.Column="0" Content="{Binding Duration, Mode=OneWay}" ContentStringFormat="{}{0:0.###}" Padding="2,0,0,0" FontWeight="Bold" ToolTip="Total Time" Style="{StaticResource MetroLabel}">
                            <Label.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="Tomato" Offset="{Binding Ratio, Mode=OneWay}"/>
                                    <GradientStop Color="LimeGreen" Offset="{Binding Ratio, Mode=OneWay}"/>
                                </LinearGradientBrush>
                            </Label.Background>
                        </Label>
                        <Label x:Name="SelfText" Grid.Column="0" Content="{Binding SelfDuration, Mode=OneTime}" ContentStringFormat="{}{0:0.###}" HorizontalAlignment="Right" Foreground="White" FontSize="8pt" ToolTip="Self Time" Margin="0,0,2,0" />
                        <Label Grid.Column="1" Content="{Binding Name, Mode=OneTime}" Margin="4,0,0,0" Style="{StaticResource LabelUnderscoreStyle}" ToolTip="{Binding ToolTipName, Mode=OneTime}" />
                        <Controls:TagsControl Grid.Column="2" x:Name="Tags" DataContext="{Binding Tags, Mode=OneTime}" Margin="4,0,0,0" />
                    </Grid>
                    <HierarchicalDataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=ShowPercentButton}" Value="True">
                            <Setter TargetName="TotalText" Property="Content" Value="{Binding TotalPercent, Mode=OneWay}" />
                            <Setter TargetName="TotalText" Property="ContentStringFormat" Value="{}{0:0.##}%" />
                            <Setter TargetName="SelfText" Property="Content" Value="{Binding SelfPercent, Mode=OneWay}" />
                            <Setter TargetName="SelfText" Property="ContentStringFormat" Value="{}{0:0.##}%" />
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
                <!-- <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}" x:Key="{x:Static SystemColors.HighlightBrushKey}"/> -->
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="{StaticResource AccentColor}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"  Color="{StaticResource AccentColor2}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{StaticResource IdealForegroundColor}"/>
                    </Style.Resources>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Visibility" Value="{Binding Visible}" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        <local:FrameDataTable Grid.Row="0" Grid.RowSpan="2" Width="Auto" RenderTransformOrigin="0.461,0.52" Grid.Column="1" DataContext="{Binding Board}" x:Name="SummaryTable" Margin="4,0,0,0" />
        <GridSplitter ResizeDirection="Columns" Width="6" Grid.Column="1" HorizontalAlignment="Left" Grid.RowSpan="2"/>
    </Grid>
</UserControl>